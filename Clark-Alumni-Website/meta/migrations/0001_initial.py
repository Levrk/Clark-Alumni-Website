# Generated by Django 4.2.4 on 2023-09-10 19:25

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import meta.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=150, verbose_name="last name"),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, unique=True, verbose_name="email address"),
                ),
                ("cell_phone", models.CharField(blank=True, null=True)),
                (
                    "academic_standing",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("first_year", "First Year"),
                            ("sophomore", "Sophomore"),
                            ("junior", "Junior"),
                            ("senior", "Senior"),
                            ("post_grad", "Post Grad"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "ordering": ("-date_joined",),
                "abstract": False,
            },
            managers=[
                ("objects", meta.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="StudentRequestForm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("assigned", "Assigned"),
                            ("closed", "Closed"),
                        ],
                        default="draft",
                    ),
                ),
                (
                    "help_requested",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("cover_letter", "Cover Letter"),
                            ("resume", "Resume"),
                            ("mock_interview", "Mock Interview"),
                            ("career_planning", "Career Planning"),
                            ("mentor_shadowing", "Mentor Shadowing"),
                            ("other", "Other"),
                        ],
                        null=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                ("document_link", models.CharField(blank=True, null=True)),
                (
                    "job_interest",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "industry_interest",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "assigned_alum",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="alumni_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
